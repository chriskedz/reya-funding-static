name: Deploy to Production

on:
  push:
    branches: [production]
  workflow_dispatch:

# Control concurrent deployments
concurrency:
  group: production-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15  # Prevent long-running deployments
    env:
      AWS_S3_BUCKET_PROD: ${{ secrets.AWS_S3_BUCKET_PROD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: "eu-central-1"
      SOURCE_DIR: "/"
      AWS_CLOUDFRONT_DISTRIBUTION_ID: "E3DKH438IVMXVO"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full git history for better versioning

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # Updated to latest LTS version

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        id: build
        run: npm run build
        
      - name: Upload build artifacts on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-artifacts
          path: dist
          retention-days: 3
          
      - name: Set deployment timestamp
        id: deployment-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT

      # S3 deployments: Static files with long cache, HTML with short cache
      - name: Sync static files to S3 bucket (long cache)
        run: |
          aws s3 sync ${SOURCE_DIR:-.} s3://${AWS_S3_BUCKET_PROD}/ \
            --no-progress --delete \
            --cache-control "max-age=31536000,public" \
            --exclude "*.html" \
            --no-paginate

      - name: Sync HTML files to S3 bucket (short cache)
        run: |
          aws s3 sync ${SOURCE_DIR:-.} s3://${AWS_S3_BUCKET_PROD}/ \
            --no-progress --delete \
            --cache-control "max-age=60,public" \
            --include "*.html" \
            --no-paginate

      - name: Invalidate CloudFront cache
        run: |
          if [ -n "$AWS_CLOUDFRONT_DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation \
              --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} \
              --paths "/*"
          fi
          
      - name: Verify deployment
        run: |
          # Production website endpoint
          ENDPOINT="https://d2mw4d8injvp1v.cloudfront.net"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $ENDPOINT)
          if [[ $HTTP_STATUS == 2* ]]; then
            echo "‚úÖ Deployment verified successfully ($HTTP_STATUS)"
          else
            echo "‚ùå Deployment verification failed: HTTP Status $HTTP_STATUS"
            exit 1
          fi
            
      - name: Deployment summary
        run: |
          echo "üöÄ Deployed to production at ${{ steps.deployment-timestamp.outputs.timestamp }}"
          echo "üì¶ Build artifacts successfully uploaded to S3"
          echo "üîÑ CloudFront cache invalidated"
