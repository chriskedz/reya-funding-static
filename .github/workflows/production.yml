name: Deploy to S3

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          
      - name: Upload to S3
        run: |
          aws s3 cp index.html s3://${{ secrets.AWS_S3_BUCKET_PROD }}/index.html \
            --acl public-read \
            --cache-control "max-age=0, no-cache"
            
      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id E3DKH438IVMXVO \
            --paths "/*"
            
      - name: Set deployment timestamp
        id: deployment-timestamp
        run: echo "timestamp=$(date +'%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
          aws s3 sync ${SOURCE_DIR:-.} s3://${AWS_S3_BUCKET_PROD}/ \
            --no-progress --delete \
            --cache-control "max-age=31536000,public" \
            --exclude "*.html" \
            --no-paginate

      - name: Sync HTML files to S3 bucket (short cache)
        run: |
          aws s3 sync ${SOURCE_DIR:-.} s3://${AWS_S3_BUCKET_PROD}/ \
            --no-progress --delete \
            --cache-control "max-age=60,public" \
            --include "*.html" \
            --no-paginate

      - name: Invalidate CloudFront cache
        run: |
          if [ -n "$AWS_CLOUDFRONT_DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation \
              --distribution-id ${AWS_CLOUDFRONT_DISTRIBUTION_ID} \
              --paths "/*"
          fi
          
      - name: Verify deployment
        run: |
          # Production website endpoint
          ENDPOINT="https://d2mw4d8injvp1v.cloudfront.net"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $ENDPOINT)
          if [[ $HTTP_STATUS == 2* ]]; then
            echo "‚úÖ Deployment verified successfully ($HTTP_STATUS)"
          else
            echo "‚ùå Deployment verification failed: HTTP Status $HTTP_STATUS"
            exit 1
          fi
            
      - name: Deployment summary
        run: |
          echo "üöÄ Deployed to production at ${{ steps.deployment-timestamp.outputs.timestamp }}"
          echo "üì¶ Build artifacts successfully uploaded to S3"
          echo "üîÑ CloudFront cache invalidated"
